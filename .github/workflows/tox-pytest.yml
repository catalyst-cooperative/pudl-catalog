name: tox-pytest

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10"]
      fail-fast: false

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 2

    - name: Set up conda environment for testing
      uses: conda-incubator/setup-miniconda@v2.1.1
      with:
        miniforge-variant: Mambaforge
        miniforge-version: latest
        use-mamba: true
        mamba-version: "*"
        channels: conda-forge,defaults
        channel-priority: true
        python-version: ${{ matrix.python-version }}
        activate-environment: pudl-catalog
        environment-file: environment.yml
    - shell: bash -l {0}
      run: |
        conda info
        conda list
        conda config --show-sources
        conda config --show
        printenv | sort

    - name: Run PyTest with Tox
      run: |
        conda run -n pudl-catalog tox

    - name: Upload test coverage report to CodeCov
      uses: codecov/codecov-action@v3

    - name: Inform the Codemonkeys
      uses: 8398a7/action-slack@v3
      with:
        status: custom
        fields: workflow,job,commit,repo,ref,author,took
        custom_payload: |
          {
            username: 'action-slack',
            icon_emoji: ':octocat:',
            attachments: [{
              color: '${{ job.status }}' === 'success' ? 'good' : '${{ job.status }}' === 'failure' ? 'danger' : 'warning',
              text: `${process.env.AS_WORKFLOW}\n${process.env.AS_JOB} (${process.env.AS_COMMIT}) of ${process.env.AS_REPO}@${process.env.AS_REF} by ${process.env.AS_AUTHOR} ${{ job.status }} in ${process.env.AS_TOOK}`,
            }]
          }
      env:
        GITHUB_TOKEN: ${{ github.token }} # required
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # required
        MATRIX_CONTEXT: ${{ toJson(matrix) }} # required
      if: ${{ always() && github.actor != 'dependabot[bot]' }}
